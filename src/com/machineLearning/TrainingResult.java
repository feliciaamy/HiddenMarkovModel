package com.machineLearning;

import java.util.*;

/**
 * Created by Amy on 26/11/16.
 */
public class TrainingResult {
    Map<String, Integer> ignored;
    Map<String, Integer> label;
    Map<String, Integer> trainedWords;
    List<String> labelSorted;
    Map<EmissionNode, Integer> emission;
    Map<EmissionNode, Double> emissionProbability;
    Map<TransitionNode, Integer> transition;
    Map<TransitionNode, Double> transitionProbability;
    final String[] stopwords_en = {"a", "able", "about", "above", "abst", "accordance", "according", "accordingly", "act", "actually", "across", "add", "added", "adj", "affected", "affecting", "affects", "after", "afterwards", "again", "against", "ah", "all", "almost", "alone", "along", "already", "also", "although", "always", "am", "among", "amongst", "an", "and", "announce", "another", "any", "anybody", "anyhow", "anymore", "anyone", "anything", "anyway", "anyways", "anywhere", "apparently", "approximately", "are", "aren", "arent", "arise", "area", "areas", "around", "as", "aside", "ask", "asked", "asking", "asks", "at", "auth", "available", "away", "awfully", "b", "back", "backed", "backing", "backs", "be", "became", "because", "become", "becomes", "becoming", "been", "before", "beforehand", "began", "begin", "beginning", "beginnings", "begins", "behind", "being", "beings", "believe", "below", "beside", "besides", "best", "better", "between", "beyond", "big", "biol", "both", "brief", "briefly", "but", "by", "c", "ca", "came", "can", "cannot", "cant", "cause", "causes", "case", "cases", "certain", "certainly", "clear", "clearly", "co", "com", "come", "comes", "contain", "containing", "contains", "could", "couldnt", "d", "date", "dear", "did", "didnt", "differ", "different", "differently", "do", "does", "doesnt", "doing", "done", "dont", "down", "downwards", "downed", "downing", "downs", "due", "during", "e", "each", "ed", "edu", "effect", "eg", "eight", "eighty", "eighteen", "early", "either", "else", "elsewhere", "end", "ended", "ending", "ends", "enough", "especially", "et", "etc", "even", "evenly", "ever", "every", "everybody", "everyone", "everything", "everywhere", "ex", "f", "face", "faces", "fact", "facts", "far", "felt", "few", "fifth", "first", "five", "find", "finds", "first", "fix", "followed", "following", "follows", "for", "former", "formerly", "forth", "found", "four", "from", "full", "fully", "further", "furthered", "furthering", "furthermore", "furthers", "g", "give", "given", "gives", "giving", "gave", "general", "generally", "get", "gets", "getting", "go", "goes", "going", "going", "good", "goods", "got", "gotten", "great", "great", "greater", "greatest", "group", "grouped", "grouping", "groups", "h", "had", "happens", "hardly", "has", "hasnt", "have", "havent", "having", "he", "hed", "hence", "her", "here", "hereafter", "hereby", "herein", "heres", "hers", "herself", "hereupon", "hes", "hi", "hid", "high", "higher", "higest", "him", "himself", "his", "hither", "how", "however", "howbeit", "hundred", "i", "id", "ie", "if", "ill", "im", "immediate", "immediately", "importance", "important", "in", "inc", "indeed", "index", "information", "instead", "interest", "interested", "interesting", "interests", "into", "invention", "inward", "is", "isnt", "it", "itd", "itll", "its", "itself", "ive", "j", "just", "k", "keep", "keeps", "kept", "kg", "km", "kind", "knew", "know", "known", "knows", "l", "large", "largely", "last", "lately", "later", "latter", "latterly", "latest", "least", "less", "lest", "let", "lets", "like", "liked", "likely", "line", "little", "ll", "long", "longer", "longest", "look", "looking", "looks", "ltd", "m", "made", "mainly", "make", "makes", "making", "man", "many", "may", "maybe", "me", "mean", "means", "member", "members", "men", "meantime", "meanwhile", "merely", "mg", "might", "million", "miss", "ml", "more", "moreover", "most", "mostly", "mr", "mrs", "much", "mug", "must", "my", "myself", "n", "na", "nah", "name", "namely", "nay", "nd", "near", "nearly", "need", "needed", "needing", "needs", "never", "nevertheless", "new", "newer", "newest", "next", "nine", "ninety", "nineteen", "no", "nobody", "necessarily", "necessary", "neither", "no", "non", "none", "nonetheless", "nor", "normally", "nos", "not", "noted", "nothing", "now", "nowhere", "number", "numbers", "o", "obtain", "obtained", "obtains", "obviously", "of", "off", "often", "oh", "ok", "okay", "old", "older", "oldest", "omitted", "on", "once", "one", "ones", "only", "onto", "or", "ord", "open", "opened", "opening", "opens", "or", "order", "ordered", "ordering", "orders", "other", "others", "otherwise", "ought", "our", "ours", "ourselves", "out", "outside", "over", "overall", "own", "p", "page", "pages", "part", "parted", "particular", "particularly", "parting", "parts", "past", "per", "perhaps", "place", "placed", "places", "please", "plus", "point", "pointed", "pointing", "points", "poorly", "possible", "possibly", "potentially", "pp", "present", "presented", "presenting", "presents", "predominantly", "previously", "primarily", "probably", "promptly", "problem", "problems", "proud", "provides", "put", "puts", "q", "que", "quickly", "quite", "qv", "quiterather", "r", "ran", "rd", "re", "readily", "rather", "really", "recent", "recently", "ref", "refs", "regarding", "regardless", "regards", "related", "relatively", "research", "respectively", "resulted", "resulting", "results", "right", "run", "room", "rooms", "s", "said", "same", "saw", "say", "saying", "says", "sec", "section", "second", "seconds", "see", "seeing", "seem", "seemed", "seeming", "seems", "seen", "sees", "self", "selves", "sent", "seven", "several", "shall", "she", "shed", "shell", "shes", "should", "shouldnt", "show", "showed", "shown", "showing", "shows", "side", "sides", "significant", "significantly", "similar", "similarly", "since", "six", "sixty", "sixteen", "slightly", "small", "smaller", "smallest", "so", "some", "somebody", "somehow", "someone", "somethan", "something", "sometime", "sometimes", "somewhat", "somewhere", "soon", "sorry", "state", "states", "specifically", "specified", "specify", "specifying", "still", "stop", "strongly", "sub", "substantially", "successfully", "such", "sufficiently", "suggest", "sup", "sure", "t", "take", "taken", "taking", "tell", "tend", "tends", "th", "than", "thank", "thanks", "thanx", "that", "thatll", "thats", "thatve", "the", "their", "theirs", "them", "themselves", "then", "thence", "there", "thereafter", "thereby", "therefore", "therein", "therell", "thereof", "therere", "theres", "thereto", "thereupon", "thereve", "thered", "these", "they", "theyd", "theyll", "theyre", "theyve", "thing", "things", "think", "thinks", "this", "those", "thou", "though", "thought", "thoughts", "thousand", "three", "throug", "through", "throughout", "thru", "thus", "til", "till", "tip", "tis", "to", "today", "together", "too", "took", "toward", "towards", "tried", "tries", "truly", "try", "trying", "ts", "turn", "turned", "turning", "turns", "twas", "twice", "two", "u", "un", "under", "unfortunately", "unless", "unlike", "unlikely", "until", "unto", "up", "ups", "upon", "us", "use", "used", "useful", "usefully", "usefulness", "using", "uses", "usually", "v", "value", "various", "ve", "very", "via", "viz", "vol", "vols", "vs", "w", "want", "wanted", "wanting", "wants", "was", "wasnt", "way", "ways", "we", "wed", "welcome", "well", "wells", "went", "were", "werent", "weve", "what", "whatever", "whatll", "whats", "when", "whence", "whenever", "where", "whereafter", "whereas", "whereby", "wherein", "wheres", "whereupon", "wherever", "whether", "which", "while", "whim", "whither", "who", "whod", "whoever", "whole", "wholl", "whose", "whom", "whomever", "whos", "why", "widely", "will", "willing", "wish", "with", "within", "without", "wont", "words", "world", "work", "worked", "working", "works", "would", "wouldnt", "www", "x", "y", "year", "years", "yes", "yet", "you", "youd", "youll", "young", "younger", "youngest", "your", "youre", "yours", "yourself", "yourselves", "youve", "z", "zero"};
    final String[] stopwords_es = {"un", "una", "unas", "unos", "uno", "sobre", "todo", "también", "tras", "otro", "algún", "alguno", "alguna", "algunos", "algunas", "ser", "es", "soy", "eres", "somos", "sois", "estoy", "esta", "estamos", "estais", "estan", "como", "en", "para", "atras", "porque", "por qué", "estado", "estaba", "ante", "antes", "siendo", "ambos", "pero", "por", "poder", "puede", "puedo", "podemos", "podeis", "pueden", "fui", "fue", "fuimos", "fueron", "hacer", "hago", "hace", "hacemos", "haceis", "hacen", "cada", "fin", "incluso", "primero	desde", "conseguir", "consigo", "consigue", "consigues", "conseguimos", "consiguen", "ir", "voy", "va", "vamos", "vais", "van", "vaya", "gueno", "ha", "tener", "tengo", "tiene", "tenemos", "teneis", "tienen", "el", "la", "lo", "las", "los", "su", "aqui", "mio", "tuyo", "ellos", "ellas", "nos", "nosotros", "vosotros", "vosotras", "si", "dentro", "solo", "solamente", "saber", "sabes", "sabe", "sabemos", "sabeis", "saben", "ultimo", "largo", "bastante", "haces", "muchos", "aquellos", "aquellas", "sus", "entonces", "tiempo", "verdad", "verdadero", "verdadera", "cierto", "ciertos", "cierta", "ciertas", "intentar", "intento", "intenta", "intentas", "intentamos", "intentais", "intentan", "dos", "bajo", "arriba", "encima", "usar", "uso", "usas", "usa", "usamos", "usais", "usan", "emplear", "empleo", "empleas", "emplean", "ampleamos", "empleais", "valor", "muy", "era", "eras", "eramos", "eran", "modo", "bien", "cual", "cuando", "donde", "mientras", "quien", "con", "entre", "sin", "trabajo", "trabajar", "trabajas", "trabaja", "trabajamos", "trabajais", "trabajan", "podria", "podrias", "podriamos", "podrian", "podriais", "yo", "aquel"};
    final List<String> stopwords;
    final Map<String, String[]> stopwordsMap;

    public TrainingResult(String language) {
        emissionProbability = new HashMap<EmissionNode, Double>();
        label = new HashMap<String, Integer>();
        ignored = new HashMap<String, Integer>();
        emission = new HashMap<EmissionNode, Integer>();
        transition = new HashMap<TransitionNode, Integer>();
        transitionProbability = new HashMap<TransitionNode, Double>();
        trainedWords = new HashMap<String, Integer>();
        labelSorted = new ArrayList<String>();
        stopwordsMap = new HashMap<>();
        stopwordsMap.put("EN", stopwords_en);
        stopwordsMap.put("ES", stopwords_es);
        if (language.equals("EN") || language.equals("ES")) {
            stopwords = new ArrayList<String>(Arrays.asList(stopwordsMap.get(language)));
        } else {
            stopwords = new ArrayList<String>();
        }
    }
}
